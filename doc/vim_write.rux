*vim_write.txt*		Для Vim версии 7.0.		*vim_write*

			РУКОВОДСТВО ПО VIM_WRITE

1. Описание						|vim_write-description|
2. Зависимости						|vim_write-requirements|
3. Установка						|vim_write-install|
4. Использование					|vim_write-use|
5. Опции						|vim_write-opt|
6. Команды						|vim_write-commands|
7. Меню							|vim_write-menu|
8. События						|vim_write-events|

================================================================================
1. Описание						*vim_write-description*

Плагин vim_write отвечает за механизмы, ответственные за сохранение изменений
в файл. 

Данный плагин позволяет включить автоматическое сохранение изменений в
файл. Сохранение выполняется после указанного в опции 'updatetime' значения
миллисекунд.

Плагин так же реализует механизм автозамены значений в буфере перед его
сохранением в файл. Это особенно полезно, когда необходимо фиксировать в файле
дату создания и последнего изменения.

================================================================================
2. Зависимости						*vim_write-requirements*

Данный плагин работает с редактором Vim версии 7.0 или старше.

vim_lib		https://github.com/Bashka/vim_lib
	Плагин реализован с использованием класса vim_lib#sys#Plugin#, а так
	же использует некоторые компоненты этой библиотеки.

================================================================================
3. Установка						*vim_write-install*

Плагин устанавливается аналогично другим плагинам редактора Vim. Если
предполагается использование механизма автосохранения, задайте значение
свойству 'updatetime' редактора Vim.

================================================================================
4. Использование					*vim_write-use*

Механизм автосохранения позволяет автоматически сохранять изменения в файл.
Для включения этого механизма используйте команду 'VimWriteAwStart' или
установите свойство плагина 'aw' в значение 1. Автосохранение выполняется
после указанного в свойстве 'updatetime' редактора количества миллисекунд с
момента простоя редактора.

Для выполнения автозамены перед сохранением изменений в файл, на пример если
необходимо изменить строку вида: Last Change: дата - используется опция
плагина 'replacement'. Данная опция позволяет указать шаблон замены для
различных типов файлов. На пример, если необходимо выполнить описанную ранее
замену в файлах типа xml, html и php, опцию необходимо определить следующим
образом:
>
	let vim_write#replacement['xml'] = ['%s/\vLast Change: [0-9:\- ]+/\="Last Change: " . strftime("%Y-%m-%d %T")/e']
	let vim_write#replacement['html'] = vim_write#replacement['xml']
	let vim_write#replacement['php'] = vim_write#replacement['xml']

Для отключения механизма автозамены, установите значение 0 в свойстве плагина
'preplace'.

================================================================================
5. Опции						*vim_write-options*

preplace						*vim_write-opt-preplace*
	Опция определяет, включен ли механизм автоматической замены данных
	буфера перед его сохранением.

aw							*vim_write-opt-aw*
	Опция определяет, включен ли механизм автоматического сохранения 
	изменений.

awTypes							*vim_write-opt-awTypes*
	Опция определяет типы файлов, в которых механизм автосохранения
	изменений включен. Типы файлов в опции перечисляются в виде массива 
	строк. Если опция имеет значение all, то механизм автосохранения 
	используется во всех файлах.

================================================================================
6. Команды						*vim_write-comm*

VimWriteAwStart						*vim_write-comm-VimWriteAwStart*
	Команда включает механизм автосохранения.

VimWriteAwStop						*vim_write-comm-VimWriteAwStop*
	Команда отключает механизм автосохранения.

================================================================================
7. Меню							*vim_write-menu*

Aw_start						*vim_write-menu-Aw_start*
	Пункт меню включает механизм автосохранения.

Aw_stop							*vim_write-menu-Aw_stop*
	Пункт меню отключает механизм автосохранения.

================================================================================
8. События						*vim_write-events*

VimWritePwrite						*vim_write-event-VimWritePwrite*
	Событие выбрасывается после выполнения автоматической замены в буфере
	перед его сохранением.

================================================================================
vim:tw=78:ts=8:ft=help:norl:colorcolumn=+3:
